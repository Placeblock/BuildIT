/* automatically generated by rust-bindgen 0.70.1 */

pub const CREATE_PLUGIN_SYMBOL : & [u8 ; 14] = b"create_plugin\0" ; pub const VERSION : & [u8 ; 2] = b"1\0" ; # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct Plugin { pub name : * const :: std :: os :: raw :: c_char , pub init : :: std :: option :: Option < unsafe extern "C" fn (world : * mut ecs_world_t) > , pub do_work : :: std :: option :: Option < unsafe extern "C" fn (world : * mut ecs_world_t) -> :: std :: os :: raw :: c_int > , pub shutdown : :: std :: option :: Option < unsafe extern "C" fn (world : * mut ecs_world_t) > , } # [allow (clippy :: unnecessary_operation , clippy :: identity_op)] const _ : () = { ["Size of Plugin"] [:: std :: mem :: size_of :: < Plugin > () - 32usize] ; ["Alignment of Plugin"] [:: std :: mem :: align_of :: < Plugin > () - 8usize] ; ["Offset of field: Plugin::name"] [:: std :: mem :: offset_of ! (Plugin , name) - 0usize] ; ["Offset of field: Plugin::init"] [:: std :: mem :: offset_of ! (Plugin , init) - 8usize] ; ["Offset of field: Plugin::do_work"] [:: std :: mem :: offset_of ! (Plugin , do_work) - 16usize] ; ["Offset of field: Plugin::shutdown"] [:: std :: mem :: offset_of ! (Plugin , shutdown) - 24usize] ; } ; pub type CreatePluginFn = :: std :: option :: Option < unsafe extern "C" fn () -> * mut Plugin > ;