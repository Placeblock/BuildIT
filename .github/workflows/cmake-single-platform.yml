# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    environment: Production
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Cache Vulkan SDK
      id: cache-vulkan-sdk
      uses: actions/cache@v4
      with:
        path: D:\vulkansdk-${{vars.VULKAN_VERSION}}
        key: vulkan-${{vars.VULKAN_VERSION}}
        
    - name: Download and Extract Vulkan SDK
      if: steps.cache-vulkan-sdk.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
          curl -S -L https://sdk.lunarg.com/sdk/download/1.4.321.1/windows/vulkansdk-windows-X64-${{vars.VULKAN_VERSION}}.exe -o vulkansdk-installer.exe
          echo "Installing Vulkan-SDK to \vulkansdk-${{vars.VULKAN_VERSION}}"
          .\vulkansdk-installer.exe --root "D:\vulkansdk-${{vars.VULKAN_VERSION}}" --accept-licenses --default-answer --confirm-command install com.lunarg.vulkan.glm
          dir "\vulkansdk-${{vars.VULKAN_VERSION}}"

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
          cmake --help
          cmake -DCMAKE_PREFIX_PATH="D:/vulkansdk-${{vars.VULKAN_VERSION}}" -DVULKAN_SDK="D:/vulkansdk-${{vars.VULKAN_VERSION}}" -B "D:/build" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake -DCMAKE_PREFIX_PATH="D:/vulkansdk-${{vars.VULKAN_VERSION}}" -DVULKAN_SDK="D:\\vulkansdk-${{vars.VULKAN_VERSION}}" --build "D:/build"

    #- name: Test
    #  working-directory: ${{github.workspace}}/build
    #  # Execute tests defined by the CMake configuration.
    #  # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #  run: ctest -C ${{env.BUILD_TYPE}}

